version: 2

defaults: &defaults
  docker:
    - image: circleci/node:8

jobs:
  test:
    <<: *defaults
    working_directory: ~/transform-css
    steps:
      - checkout:
          path: ~/transform-css
      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-{{ .Environment.CACHE_VERSION }}-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
      - run: npm test
      - persist_to_workspace:
          root: ~/
          paths:
            - transform-css

  test:example:
    <<: *defaults
    working_directory: ~/transform-css/example
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - example-dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
            - example-dependencies-{{ .Environment.CACHE_VERSION }}-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: example-dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
      - run: npm test
      - persist_to_workspace:
          root: ~/
          paths: 
            - transform-css

  build:
    <<: *defaults
    working_directory: ~/transform-css/example
    steps:
      - attach_workspace:
          at: ~/
      - run: npm run build
      - persist_to_workspace:
          root: ~/transform-css/example
          paths: 
            - dist

  deploy:
    docker:
      - image: cibuilds/aws:1.15.44
    steps:
      - attach_workspace:
          at: ~/transform-css/example
      - run: aws configure set region us-west-2
      - run: aws configure set preview.cloudfront true
      - run: aws configure set preview.create-invalidation true
      - run: aws s3 sync ~/transform-css/example/dist s3://transform-css/$CIRCLE_BRANCH --delete
      - run: aws cloudfront create-invalidation --cli-input-json "{\"DistributionId\":\"$AWS_CLOUDFRONT_ID\",\"InvalidationBatch\":{\"Paths\":{\"Quantity\":2,\"Items\":[\"/index.html\",\"/*\"]},\"CallerReference\":\"$(date +%s)\"}}"

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
      - test:example:
          requires:
            - test
      - build:
          requires:
            - test:example
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build
